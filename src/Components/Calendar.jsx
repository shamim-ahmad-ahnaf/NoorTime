import React, { useState } from 'react';
import moment from 'moment-hijri';
import 'moment/locale/bn';
import RevealOnScroll from '../Context/RevealOnScroll'; // Assuming you have a RevealOnScroll component
const islamicEvents = {
    '1-1': '‡¶π‡¶ø‡¶ú‡¶∞‡¶ø ‡¶®‡¶¨‡¶¨‡¶∞‡ßç‡¶∑',
    '10-1': '‡¶Ü‡¶∂‡ßÅ‡¶∞‡¶æ',
    '27-7': '‡¶Æ‡ßá‡¶∞‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∞‡¶æ‡¶§',
    '15-8': '‡¶∂‡¶¨‡ßá ‡¶¨‡¶∞‡¶æ‡¶§',
    '1-9': '‡¶∞‡¶Æ‡¶ú‡¶æ‡¶® ‡¶∂‡ßÅ‡¶∞‡ßÅ',
    '27-9': '‡¶≤‡¶æ‡¶á‡¶≤‡¶æ‡¶§‡ßÅ‡¶≤ ‡¶ï‡¶¶‡¶∞',
    '1-10': '‡¶à‡¶¶‡ßÅ‡¶≤ ‡¶´‡¶ø‡¶§‡¶∞',
    '9-12': '‡¶Ü‡¶∞‡¶æ‡¶´‡¶æ‡¶π ‡¶¶‡¶ø‡¶¨‡¶∏',
    '10-12': '‡¶à‡¶¶‡ßÅ‡¶≤ ‡¶Ü‡¶ú‡¶π‡¶æ',
};

const hijriMonthsBn = [
    '‡¶Æ‡ßÅ‡¶π‡¶æ‡¶∞‡¶∞‡¶Æ',
    '‡¶∏‡¶´‡¶∞',
    '‡¶∞‡¶¨‡¶ø‡¶â‡¶≤ ‡¶Ü‡¶â‡¶Ø‡¶º‡¶æ‡¶≤',
    '‡¶∞‡¶¨‡¶ø‡¶â‡¶∏ ‡¶∏‡¶æ‡¶®‡¶ø',
    '‡¶ú‡¶Æ‡¶æ‡¶¶‡¶ø‡¶â‡¶≤ ‡¶Ü‡¶â‡¶Ø‡¶º‡¶æ‡¶≤',
    '‡¶ú‡¶Æ‡¶æ‡¶¶‡¶ø‡¶â‡¶∏ ‡¶∏‡¶æ‡¶®‡¶ø',
    '‡¶∞‡¶ú‡¶¨',
    '‡¶∂‡¶æ‚Äô‡¶¨‡¶æ‡¶®',
    '‡¶∞‡¶Æ‡¶ú‡¶æ‡¶®',
    '‡¶∂‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶≤',
    '‡¶ú‡ßç‡¶¨‡¶ø‡¶≤‡¶ï‡¶¶',
    '‡¶ú‡ßç‡¶¨‡¶ø‡¶≤‡¶π‡¶ú',
];

function HijriCalendar() {
    const [currentDate, setCurrentDate] = useState(moment());

    const startOfMonth = currentDate.clone().startOf('iMonth');
    const endOfMonth = currentDate.clone().endOf('iMonth');
    const daysInMonth = endOfMonth.diff(startOfMonth, 'days') + 1;

    const startDay = startOfMonth.day();
    const weeks = [];
    let days = [];

    for (let i = 0; i < startDay; i++) {
        days.push(<td key={`empty-start-${i}`} className="p-2 sm:p-3 bg-white"></td>);
    }

    for (let d = 0; d < daysInMonth; d++) {
        const date = startOfMonth.clone().add(d, 'days');
        const day = date.iDate();
        const month = date.iMonth() + 1;
        const eventKey = `${day}-${month}`;
        const event = islamicEvents[eventKey];

        days.push(
            <td
                key={date.format('iYYYY-iMM-iDD')}
                className={`border p-2 sm:p-3 text-center transition duration-200 ${event ? 'bg-green-100 font-semibold text-green-800 shadow-sm' : 'bg-white'
                    } hover:bg-green-50`}
            >
                <div className="text-base sm:text-lg">{day}</div>
                {event && <div className="text-[10px] sm:text-xs text-red-600 mt-1">{event}</div>}
            </td>
        );

        if ((days.length) % 7 === 0) {
            weeks.push(<tr key={`week-${d}`}>{days}</tr>);
            days = [];
        }
    }

    if (days.length > 0) {
        while (days.length < 7) {
            days.push(<td key={`empty-end-${days.length}`} className="p-2 sm:p-3 bg-white"></td>);
        }
        weeks.push(<tr key="last-week">{days}</tr>);
    }

    const handlePrevMonth = () => {
        setCurrentDate(currentDate.clone().subtract(1, 'iMonth'));
    };

    const handleNextMonth = () => {
        setCurrentDate(currentDate.clone().add(1, 'iMonth'));
    };

    const hijriMonthName = hijriMonthsBn[currentDate.iMonth()];
    const hijriYear = currentDate.iYear();

    return (
        <RevealOnScroll>
        <div className="p-4 sm:p-6  md:p-10 mt-12 max-w-6xl mx-auto bg-white rounded-xl shadow-xl border border-green-100">
            <h2 className="text-3xl mt-6 sm:text-3xl  font-bold text-green-700 mb-4 text-center">
                üìÖ ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞
            </h2>

            <div className="flex flex-col sm:flex-row justify-between items-center mb-6 gap-4 sm:gap-0">
                <button
                    onClick={handlePrevMonth}
                    className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 w-full sm:w-auto"
                >
                    ‚Üê ‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶∏
                </button>
                <h3 className="text-lg sm:text-xl font-semibold text-gray-800 text-center">
                    {hijriMonthName} {hijriYear} ‡¶π‡¶ø‡¶ú‡¶∞‡¶ø
                </h3>
                <button
                    onClick={handleNextMonth}
                    className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 w-full sm:w-auto"
                >
                    ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶Æ‡¶æ‡¶∏ ‚Üí
                </button>
            </div>

            <div className="overflow-x-auto">
                <table className="w-full border border-green-200 rounded text-sm sm:text-base min-w-[640px]">
                    <thead>
                        <tr className="bg-green-100 text-green-800">
                            {['‡¶∞‡¶¨‡¶ø', '‡¶∏‡ßã‡¶Æ', '‡¶Æ‡¶ô‡ßç‡¶ó‡¶≤', '‡¶¨‡ßÅ‡¶ß', '‡¶¨‡ßÉ‡¶π‡¶∏‡ßç‡¶™‡¶§‡¶ø', '‡¶∂‡ßÅ‡¶ï‡ßç‡¶∞', '‡¶∂‡¶®‡¶ø'].map((day, idx) => (
                                <th key={idx} className="border p-2 font-semibold">
                                    {day}
                                </th>
                            ))}
                        </tr>
                    </thead>
                    <tbody>{weeks}</tbody>
                </table>
            </div>
        </div>
        </RevealOnScroll>
    );
}

export default HijriCalendar;
